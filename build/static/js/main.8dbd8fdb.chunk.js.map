{"version":3,"sources":["components/filter/Filter.module.css","components/phonebook/PhonebookMain.jsx","components/contactList/ContactList.jsx","components/filter/Filter.jsx","App.js","index.js","components/phonebook/PhonebookMain.module.css"],"names":["module","exports","Phonebook","onSubmit","useState","name","setName","number","setNumber","reset","e","preventDefault","id","generate","className","styles","form","type","value","onChange","currentTarget","input","pattern","title","required","btn","ContactList","listContact","onDelete","map","key","onClick","Filter","handleChange","filter","label","App","contacts","state","setState","useEffect","getContacts","window","localStorage","getItem","arrContacts","JSON","parse","prevState","setItem","stringify","data","some","contact","alert","item","toLowerCase","includes","handleFilter","newContactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dbd8fdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3xAdp\"};","import React, { useState } from \"react\";\r\nimport { generate } from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./PhonebookMain.css\";\r\nimport styles from \"./PhonebookMain.module.css\";\r\n\r\nconst Phonebook = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChangeName = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setName(value);\r\n  };\r\n\r\n  const handleChangeNumber = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setNumber(value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = generate();\r\n    const newContact = { id, name, number };\r\n    onSubmit(newContact);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={styles.form}>\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChangeName}\r\n            className={styles.input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <label>Number</label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChangeNumber}\r\n            className={styles.input}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className={styles.btn}>\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n\r\nPhonebook.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactList.css\";\r\n\r\nconst ContactList = ({ listContact, onDelete }) => {\r\n  return (\r\n    <ul className=\"contacts\">\r\n      {listContact.map(({ name, id, number }) => {\r\n        return (\r\n          <li key={id}>\r\n            {name}: {number}\r\n            <button onClick={() => onDelete(id)} type=\"button\" className=\"btn\">\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  listContact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n  return (\r\n    <div>\r\n      <label className={styles.label}>Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n        className=\"input\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Phonebook from \"./components/phonebook/PhonebookMain.jsx\";\nimport ContactList from \"./components/contactList/ContactList.jsx\";\nimport Filter from \"./components/filter/Filter.jsx\";\n\nconst App = () => {\n  const [state, setState] = useState({\n    contacts: [],\n    filter: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const formSubmitHandler = (data) => {\n    const { contacts } = state;\n    const availability = contacts.some((contact) => contact.name === data.name);\n\n    if (availability !== true) {\n      setState((prevState) => {\n        return { ...prevState, contacts: [...prevState.contacts, data] };\n      });\n    } else {\n      alert(\"Already in book!\");\n      return;\n    }\n  };\n\n  const handleFilter = () => {\n    const { filter, contacts } = state;\n    const filteredContacts = contacts.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  const handleDelete = (id) => {\n    setState((prevState) => {\n      const copyContactsList = [...prevState.contacts];\n      const newContactsList = copyContactsList.filter(\n        (contact) => contact.id !== id\n      );\n      return { ...prevState, contacts: newContactsList };\n    });\n  };\n\n  useEffect(() => {\n    const getContacts = window.localStorage.getItem(\"contacts\");\n    const arrContacts = JSON.parse(getContacts);\n    arrContacts &&\n      setState((prevState) => ({\n        ...prevState,\n        contacts: arrContacts,\n      }));\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(state.contacts));\n  }, [state.contacts]);\n\n  return (\n    <div className=\"conteiner\">\n      <h1>Phonebook</h1>\n      <Phonebook onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter handleChange={handleChange} filter={state.filter} />\n      <ContactList listContact={handleFilter()} onDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhonebookMain_form__F1vkl\",\"input\":\"PhonebookMain_input__1Mi8f\",\"btn\":\"PhonebookMain_btn__2hezs\"};"],"sourceRoot":""}